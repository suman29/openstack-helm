kind: Deployment
apiVersion: extensions/v1beta1

metadata:
  name: neutron-cisco-asr
  labels:
    system: openstack
    type: backend
    component: neutron
spec:
  replicas: 1
  revisionHistoryLimit: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 3
  selector:
    matchLabels:
      name: neutron-cisco-asr
  template:
    metadata:
      labels:
        name: neutron-cisco-asr
      annotations:
        pod.beta.kubernetes.io/hostname:  asr-pet
    spec:
      containers:
        - name: neutron-cisco-asr
          image: {{.Values.global.image_repository}}/{{.Values.global.image_namespace}}/ubuntu-source-neutron-server-m3:{{.Values.image_version_neutron_server_m3}}
          imagePullPolicy: IfNotPresent
          command:
            - /container.init/neutron-asr-start
          env:
            - name: DEBUG_CONTAINER
              value: "false"
            - name: SENTRY_DSN
              value: {{.Values.sentry_dsn | quote}}
          volumeMounts:
            - mountPath: /development
              name: development
            - mountPath: /neutron-etc
              name: neutron-etc
            - mountPath: /neutron-etc-vendor
              name: neutron-etc-vendor
            - mountPath: /cisco-patches
              name: cisco-patches
            - mountPath: /container.init
              name: container-init
      volumes:
        - name: neutron-etc
          configMap:
            name: neutron-etc
        - name: neutron-etc-vendor
          configMap:
            name: neutron-etc-vendor
        - name: cisco-patches
          configMap:
            name: cisco-patches
        - name: container-init
          configMap:
            name: neutron-bin-vendor
            defaultMode: 0755
        - name: development
          persistentVolumeClaim:
            claimName: development-pvclaim

